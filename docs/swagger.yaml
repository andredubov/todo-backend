basePath: /
definitions:
  domain.Credentials:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    type: object
  domain.TodoItem:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
  domain.TodoList:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  domain.UpdateTodoItemInput:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  domain.UpdateTodoListInput:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  domain.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
    type: object
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  handler.GetTodoItemResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.TodoItem'
        type: array
    type: object
  handler.GetTodoListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.TodoList'
        type: array
    type: object
  handler.SignInResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  handler.StatusResponse:
    properties:
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for TodoList Application
  title: Todo App API
  version: "1.0"
paths:
  /api/items/:id:
    delete:
      consumes:
      - application/json
      description: delete todo-item by id
      operationId: delete-item-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete todo-item by Id
      tags:
      - items
    get:
      consumes:
      - application/json
      description: get todo-item by id
      operationId: get-item-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.TodoItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get todo-item By Id
      tags:
      - items
    put:
      consumes:
      - application/json
      description: update todo-item by id
      operationId: update-item-by-id
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateTodoItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update todo-item by Id
      tags:
      - items
  /api/lists:
    get:
      consumes:
      - application/json
      description: get all todo-lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GetTodoListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: create todo list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.TodoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todo list
      tags:
      - lists
  /api/lists/:id:
    delete:
      consumes:
      - application/json
      description: delete todo-list by id
      operationId: delete-list-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete todo-list by Id
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: get todo-list by id
      operationId: get-list-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.TodoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List By Id
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: update todo-list by id
      operationId: update-list-by-id
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateTodoListInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update todo-list by Id
      tags:
      - lists
  /api/lists/:id/items:
    get:
      consumes:
      - application/json
      description: get all todo-items
      operationId: get-all-items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GetTodoItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Items
      tags:
      - items
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
